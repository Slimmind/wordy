/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const UpdateProfileLazyImport = createFileRoute('/update-profile')()
const SignupLazyImport = createFileRoute('/signup')()
const SearchLazyImport = createFileRoute('/search')()
const ProfileLazyImport = createFileRoute('/profile')()
const PhrasesLazyImport = createFileRoute('/phrases')()
const LoginLazyImport = createFileRoute('/login')()
const AddWordLazyImport = createFileRoute('/add-word')()
const WordsIndexLazyImport = createFileRoute('/words/')()
const WordsWordIdLazyImport = createFileRoute('/words/$wordId')()

// Create/Update Routes

const UpdateProfileLazyRoute = UpdateProfileLazyImport.update({
  path: '/update-profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/update-profile.lazy').then((d) => d.Route),
)

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const SearchLazyRoute = SearchLazyImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/search.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const PhrasesLazyRoute = PhrasesLazyImport.update({
  path: '/phrases',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/phrases.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AddWordLazyRoute = AddWordLazyImport.update({
  path: '/add-word',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/add-word.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WordsIndexLazyRoute = WordsIndexLazyImport.update({
  path: '/words/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/words/index.lazy').then((d) => d.Route))

const WordsWordIdLazyRoute = WordsWordIdLazyImport.update({
  path: '/words/$wordId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/words/$wordId.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-word': {
      preLoaderRoute: typeof AddWordLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/phrases': {
      preLoaderRoute: typeof PhrasesLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      preLoaderRoute: typeof SearchLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/update-profile': {
      preLoaderRoute: typeof UpdateProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/words/$wordId': {
      preLoaderRoute: typeof WordsWordIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/words/': {
      preLoaderRoute: typeof WordsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  AddWordLazyRoute,
  LoginLazyRoute,
  PhrasesLazyRoute,
  ProfileLazyRoute,
  SearchLazyRoute,
  SignupLazyRoute,
  UpdateProfileLazyRoute,
  WordsWordIdLazyRoute,
  WordsIndexLazyRoute,
])

/* prettier-ignore-end */
